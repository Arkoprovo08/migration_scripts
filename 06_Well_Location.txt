CREATE OR REPLACE PROCEDURE migrate_wellloc
IS
    CURSOR c_well IS 
        SELECT REFID, CREATED_ON, CREATED_BY, NAME_AUTH_SIG_CONTRA, DESIGNATION, REF_TOPSC_ARTICALNO, BLOCKNAME, BLOCKCATEGORY,
        DOS_CONTRACT, CONTRACTNAME
  
        FROM FRAMEWORK01.FORM_WEL_LOC_CHA_DEEP
        WHERE IS_MIGRATED = 0;
    
BEGIN
    FOR n IN c_well LOOP
        BEGIN
            INSERT INTO "cms"."t_well_location"@SQLSERVER1
            ("well_location_application_number", "creation_date", "created_by", "name_of_authorised_signatory", "designation", 
            "reference_to_article_policy", "block_name", "block_category", "date_of_contract_signature", "contractor_name")
            VALUES 
            (n.REFID, n.CREATED_ON, n.CREATED_BY, n.NAME_AUTH_SIG_CONTRA, n.DESIGNATION, n.REF_TOPSC_ARTICALNO, 
            n.BLOCKNAME, n.BLOCKCATEGORY, n.DOS_CONTRACT, n.CONTRACTNAME);
            
            UPDATE FRAMEWORK01.FORM_WEL_LOC_CHA_DEEP
            SET IS_MIGRATED = 1
            WHERE UPPER(TRIM(REFID)) = UPPER(TRIM(n.REFID));

        EXCEPTION
            WHEN OTHERS THEN
       --         INSERT INTO FRAMEWORK01.ERROR_LOGS (ERROR_CODE, ERROR_MESSAGE, USER_ID, TABLE_NAME, ERROR_TIME)
         --       VALUES (TO_CHAR(SQLCODE), SUBSTR(SQLERRM, 1, 250), 1, 'FORM_NOTICE_NEXT_PHASE_RELIN', SYSTIMESTAMP);
                
                DBMS_OUTPUT.PUT_LINE('Error Occurred: ' || SQLERRM);
        END;
    END LOOP;
    COMMIT;
END migrate_wellloc;
